{
  "name": "Y Combinator",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -144,
        -80
      ],
      "id": "1c24ced4-cb44-4fac-8545-cf25589de271",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://news.ycombinator.com/rss",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        80,
        -80
      ],
      "id": "b7a82a92-3534-485b-ad3e-e9af99546363",
      "name": "RSS Read"
    },
    {
      "parameters": {
        "maxItems": 3
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        304,
        -80
      ],
      "id": "9b863503-d9dc-4da7-be62-a650708b705e",
      "name": "Limit"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Base toi sur ce titre de l'article pour determiner si l'article parle de la programmation : \n{{ $json.title }}\n\nRepond uniquement par \"yes\" ou \"no\" et rien d'autre.",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        528,
        -208
      ],
      "id": "408db156-b5f7-48e3-b6ec-88aedef52e39",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        608,
        16
      ],
      "id": "381d7327-1248-4e59-8778-3818ed63893b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "dx2anSJsoJsbd6Bx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c1a43c4d-3547-4651-841e-b41b51e3ca2e",
              "name": "is_programming",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        880,
        -208
      ],
      "id": "08167c10-e49c-431c-81da-e15bcb175225",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1104,
        -80
      ],
      "id": "e54fa57e-9e80-4296-926d-526e079844d4",
      "name": "Merge"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8a174429-92ba-4bc8-9ce7-be50ec3e2eec",
              "leftValue": "={{ $json.is_programming }}",
              "rightValue": "yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1328,
        -80
      ],
      "id": "aa3719d3-98a1-4855-bed5-ff5b445c9a33",
      "name": "Filter"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nhtml = []\n\nfor item in _input.all():\n  content = f\"<p><h2><a href='{item.json.link}'>{item.json.title}</a></h2></p> <p>{item.json.text}</p>\"\n  html.append(content)\n  \noutput = {\n  \"data\": \"\".join(html)\n}\n\nreturn output"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2576,
        -80
      ],
      "id": "d73ee94b-d01d-4537-b8f6-97246a86f78f",
      "name": "Code in Python (Beta)"
    },
    {
      "parameters": {
        "sendTo": "picsave.k@gmail.com",
        "subject": "article Y Combinator",
        "message": "={{ $json.data }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2800,
        -80
      ],
      "id": "04874ad5-a02f-492b-9f80-d9181fef0a87",
      "name": "Send a message",
      "webhookId": "be28ca72-591a-492d-8046-a37895f32e8a",
      "credentials": {
        "gmailOAuth2": {
          "id": "N0FvdVWNbNbO7ygO",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1552,
        -208
      ],
      "id": "121345e3-f5ac-40d4-a508-27e037ea80e7",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "data",
              "cssSelector": "body",
              "skipSelectors": "img,nav,footer"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1776,
        -208
      ],
      "id": "f2d99eec-4993-413d-b999-657ddf036204",
      "name": "HTML"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=lire le text suivant attentivement et faire un resumer :\n {{ $json.data }}",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2000,
        -208
      ],
      "id": "2072bdd0-bb13-4428-aa1e-3fc34d357aeb",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2080,
        16
      ],
      "id": "d41a6f81-e928-4b1b-a0c8-03c466a763f8",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "dx2anSJsoJsbd6Bx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2352,
        -80
      ],
      "id": "d42bd9a4-431c-40d2-ad30-d1ac8aaab419",
      "name": "Merge1"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code in Python (Beta)": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Code in Python (Beta)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "748c9a14-6311-4853-a8c6-92bb93c36677",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "950e529592dba0a10e103ee7c139e9bc9e756964e1add7fc4d2c6fb8105e7445"
  },
  "id": "2gcOoRUy4WTNDKR9",
  "tags": []
}